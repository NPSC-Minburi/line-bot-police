from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage,
    ImageSendMessage, LocationSendMessage
)
from sheet import (
    add_person, update_location, search_person,
    update_case_info
)

app = Flask(__name__)

line_bot_api = LineBotApi("XZQfnLfuJztTHpij7sX+4N89Hn/hO1AGLiXwieEFPf47YZcOMVEHyNgdfUC8sEF23opgt2LCtDKS7uNSMQukHQb4Zf7jpzUcjK13LyJAbyiw+h9UATVBQ0QQhySaQoDXW8+uESgYCr4b7pE5pStCjQdB04t89/1O/w1cDnyilFU=")
handler = WebhookHandler("8c6da693d7fe0139694d880b5a8a18bd")

@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers["X-Line-Signature"]
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except Exception as e:
        print("Error:", e)
        abort(400)
    return "OK"

@app.route("/ping")
def ping():
    return "pong"

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    text = event.message.text.strip()

    if text.startswith("@‡∏à‡∏±‡∏ö"):
        parts = text[3:].split("|")
        if len(parts) != 9:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏¥‡∏î
‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ: @‡∏à‡∏±‡∏ö ‡∏ä‡∏∑‡πà‡∏≠|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£|‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà|‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô|‡∏Ç‡πâ‡∏≠‡∏´‡∏≤|‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á"))
            return
        name, id_card, phone, address, location, charge, arrest_place, arrest_date, evidence = [p.strip() for p in parts]
        sheet.append_person({
            "name": name,
            "id_card": id_card,
            "phone": phone,
            "address": address,
            "location": location,
            "charge": charge,
            "arrest_place": arrest_place,
            "arrest_date": arrest_date,
            "evidence": evidence
        })
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"))

    elif text.startswith("#"):
        keyword = text[1:].strip()
        results = sheet.search_person(keyword)
        if not results:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"))
            return

        for r in results:
            reply = f"""üë§ {r['name']}
ü™™ ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£: {r['id_card']}
üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {r['phone']}
üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: {r['address']}
üìç ‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô: {r['location']}
üßæ ‡∏Ç‡πâ‡∏≠‡∏´‡∏≤: {r['charge']}
üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°: {r['arrest_place']}
üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö: {r['arrest_date']}
üì¶ ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á: {r['evidence']}"""

            messages = [TextSendMessage(text=reply)]

            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô
            if r["location"].startswith("http"):
                loc_parts = r["location"].split("@")[-1].split(",")
                if len(loc_parts) >= 2:
                    lat = float(loc_parts[0])
                    lng = float(loc_parts[1])
                    messages.append(LocationSendMessage(
                        title="‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏ö",
                        address=r["address"],
                        latitude=lat,
                        longitude=lng
                    ))

            line_bot_api.reply_message(event.reply_token, messages)

    else:
        menu = """üìö ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:
üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°:
@‡∏à‡∏±‡∏ö ‡∏ä‡∏∑‡πà‡∏≠|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£|‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà|‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô|‡∏Ç‡πâ‡∏≠‡∏´‡∏≤|‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á

üîπ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
#‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô #‡∏™‡∏°‡∏ä‡∏≤‡∏¢)"""
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=menu))


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
