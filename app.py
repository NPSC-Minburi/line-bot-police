from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage,
    ImageSendMessage, LocationSendMessage
)
from sheet import (
    add_person, update_location, search_person,
    update_case_info
)

app = Flask(__name__)

line_bot_api = LineBotApi("XZQfnLfuJztTHpij7sX+4N89Hn/hO1AGLiXwieEFPf47YZcOMVEHyNgdfUC8sEF23opgt2LCtDKS7uNSMQukHQb4Zf7jpzUcjK13LyJAbyiw+h9UATVBQ0QQhySaQoDXW8+uESgYCr4b7pE5pStCjQdB04t89/1O/w1cDnyilFU=")
handler = WebhookHandler("8c6da693d7fe0139694d880b5a8a18bd")

@app.route("/ping")
def ping():
    return "pong"

@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return 'OK'

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    msg = event.message.text.strip()
    user_id = event.source.user_id

    if msg.startswith("@"):
        try:
            _, name, id_card, phone, address, location = msg.split("|")
            sheet.add_person(name, id_card, phone, address, location)
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"))
        except:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ @‡∏ä‡∏∑‡πà‡∏≠|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡πÄ‡∏ö‡∏≠‡∏£‡πå|‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà|‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô"))
    elif msg.startswith("@lat"):
        try:
            _, id_card, lat, lng = msg.split("|")
            sheet.update_location(id_card, f"{lat},{lng}")
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="üìç ‡πÄ‡∏û‡∏¥‡πà‡∏° location ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"))
        except:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ @lat|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|lat|lng"))
    elif msg.startswith("@‡∏à‡∏±‡∏ö"):
        try:
            _, id_card, charge, arrest_place, arrest_date, evidence = msg.split("|")
            sheet.update_case_info(id_card, charge, arrest_place, arrest_date, evidence)
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"))
        except:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ @‡∏à‡∏±‡∏ö|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡∏Ç‡πâ‡∏≠‡∏´‡∏≤|‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà|‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á"))
    elif msg.startswith("#"):
        keyword = msg[1:]
        results = sheet.search_person(keyword)
        if results:
            for r in results:
                reply = f"""üë§ {r['name']}
ü™™ ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£: {r['id_card']}
üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {r['phone']}
üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: {r['address']}
üìç ‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô: {r['location']}
üßæ ‡∏Ç‡πâ‡∏≠‡∏´‡∏≤: {r['charge']}
üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°: {r['arrest_place']}
üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö: {r['arrest_date']}
üì¶ ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á: {r['evidence']}"""
                msgs = [TextSendMessage(text=reply)]
                if r["location"]:
                    lat, lng = r["location"].split(",")
                    msgs.append(LocationSendMessage(
                        title="üìç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà",
                        address=r["address"],
                        latitude=float(lat),
                        longitude=float(lng)
                    ))
                line_bot_api.reply_message(event.reply_token, msgs)
        else:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"))
    else:
        help_text = """üìå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
@‡∏ä‡∏∑‡πà‡∏≠|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡πÄ‡∏ö‡∏≠‡∏£‡πå|‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà|‡πÇ‡∏•‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
@lat|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|lat|lng ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏Å‡∏±‡∏î
@‡∏à‡∏±‡∏ö|‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£|‡∏Ç‡πâ‡∏≠‡∏´‡∏≤|‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö|‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà|‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°
#‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
"""
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=help_text))

if __name__ == "__main__":


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
